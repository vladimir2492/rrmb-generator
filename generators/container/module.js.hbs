import { createAction } from 'redux-action'

{{#each actionsNames}}
export const {{ constantCase name }}_ACTION = '{{ constantCase name }}_ACTION';
{{/each}}


{{#each actionsNames}}
{{#if sync}}
const {{ properCase name }}Action = createAction( {{ constantCase name }}_ACTION, data => data );
{{/if}}
{{#if async}}
const {{ properCase name }}Action = createAction( {{ constantCase name }}_ACTION, (data) => {
    // ...
    return Promise.resolve(data)
})
{{/if}}

{{/each}}


export const actions = {
{{#each actionsNames}}
    {{ properCase name }}Action,
{{/each}}
};


const initialState = {
// Initial State goes here!
};

const {{ camelCase name }}Reducer = (state = initialState, action) => {
switch (action.type) {
{{#each actionsNames}}
    case {{ constantCase name }}_ACTION:
    return state;
{{/each}}
}
};

export default {{ camelCase name }}Reducer;
